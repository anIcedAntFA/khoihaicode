{
  "$schema": "https://biomejs.dev/schemas/2.1.3/schema.json",
  "vcs": {
    "enabled": true,
    "clientKind": "git",
    "useIgnoreFile": true
  },
  "files": {
    "ignoreUnknown": false,
    "includes": [
      "**",
      "!**/dist/**",
      "!**/coverage/**",
      "!**/route-tree.gen.ts"
    ]
  },
  "formatter": {
    "enabled": true,
    "indentStyle": "tab",
    "indentWidth": 2,
    "lineWidth": 80
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "performance": {
        "noReExportAll": "error",
        "useTopLevelRegex": "error"
      },
      "suspicious": {
        "noArrayIndexKey": "off",
        "noConsole": {
          "level": "warn",
          "options": {
            "allow": ["debug", "info", "error"]
          }
        }
      },
      "style": {
        "noParameterAssign": "error",
        "useAsConstAssertion": "error",
        "useDefaultParameterLast": "error",
        "useEnumInitializers": "error",
        "useSelfClosingElements": "error",
        "useSingleVarDeclarator": "error",
        "noUnusedTemplateLiteral": "error",
        "useNumberNamespace": "error",
        "noInferrableTypes": "error",
        "noUselessElse": "error"
      }
    },
    "domains": {
      "react": "recommended",
      "project": "recommended"
    }
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "single",
      "indentWidth": 2,
      "lineWidth": 80,
      "semicolons": "always",
      "jsxQuoteStyle": "single",
      "indentStyle": "tab"
    },
    "parser": {
      "unsafeParameterDecoratorsEnabled": true
    }
  },
  "json": {
    "parser": {
      "allowComments": true,
      "allowTrailingCommas": true
    },
    "formatter": {
      "indentStyle": "space",
      "trailingCommas": "none"
    }
  },
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": {
          "level": "on",
          "options": {
            "groups": [
              // Group 1: Specific core external packages (e.g., @tanstack, react-i18next)
              // These are explicitly listed to ensure they come first.
              [":PACKAGE:", "!@repo/**"],
              ":BLANK_LINE:",
              // Group 2: Monorepo-specific packages (e.g., @repo/...)
              // This group is placed before the generic :PACKAGE: to give it precedence.
              "@repo/**",
              ":BLANK_LINE:",
              // Group 3: Node.js built-in modules (e.g., path, fs)
              [":BUN:", ":NODE:", "URL"],
              ":BLANK_LINE:",
              // Group 4: Other generic external packages
              // This will catch any remaining packages not explicitly listed in Group 1 or Group 2.
              ":PACKAGE:",
              ":BLANK_LINE:",
              // Group 5: Alias imports (e.g., @/shared)
              // This covers all aliases starting with @/
              [
                "@/app/**",
                "@/pages/**",
                "@/features/**",
                "@/shared/**",
                "@/**"
              ],
              ":BLANK_LINE:",
              // Group 6: Relative imports (e.g., ../organisms, ./components)
              // Covers both parent directory (../) and current directory (./) relative paths
              "./**",
              "../**"
            ]
          }
        },
        "useSortedAttributes": "on"
      }
    }
  },
  "overrides": [
    {
      "includes": [
        "packages/ui/**/src/**/*.{ts,tsx}",
        "apps/dashboard/src/shared/ui/chakra/**/*.{ts,tsx}"
      ],
      "linter": {
        "rules": {
          "style": {
            "noParameterAssign": "off"
          }
        }
      }
    },
    {
      "includes": [
        "{apps,packages}/**/*.service.ts",
        "{apps,packages}/**/*.controller.ts"
      ],
      "linter": {
        "rules": {
          "style": {
            "useImportType": "off"
          }
        }
      }
    },
    {
      "includes": [
        "{apps,packages}/**/*.test.{ts,tsx}",
        "{apps,packages}/**/*.spec.{ts,tsx}",
        "{apps,packages}/**/test/**/*.{ts,tsx}",
        "{apps,packages}/**/tests/**/*.{ts,tsx}",
        "**/vitest.config.{ts,js}",
        "**/jest.config.{ts,js}"
      ],
      "linter": {
        "rules": {
          "style": {
            "useImportType": "off"
          },
          "suspicious": {
            "noExplicitAny": "off"
          }
        }
      }
    }
  ]
}
